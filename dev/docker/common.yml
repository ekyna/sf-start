version: '2'

# Ports:
# - nginx            : 80 (dev)
# - php              : 9000 (dev - ssh)
# - php              : 9001 (dev - xdebug)
# - mysql            : 9010 (dev)
# - mysql_test       : 9011 (dev)
# - mysql_migration  : 9012 (dev)
# - elasticsearch    : 9020 (dev - http)
# - se_hub           : 9030 (dev - http)
# - se_chrome        : 9031 (dev - vnc)
# - se_chrome        : 9032 (dev - http)

# - sftp             : 9040 (tools - ftp)
# - phpmyadmin       : 9050 (tools - http)

networks:
    default:
        external:
            name: "${COMPOSE_PROJECT_NAME}-network"

volumes:
    vendor:
        external:
            name: "${COMPOSE_PROJECT_NAME}-vendor"
    database:
        external:
            name: "${COMPOSE_PROJECT_NAME}-database"
    elasticsearch:
        external:
            name: "${COMPOSE_PROJECT_NAME}-elasticsearch"
#    database_migration:
#        external:
#            name: "${COMPOSE_PROJECT_NAME}-database-migration"

services:
    nginx:
        container_name: "${COMPOSE_PROJECT_NAME}_nginx"
        image: ekyna/nginx
        environment:
            - HTTPS_METHOD=noredirect
            - VIRTUAL_HOST=${VIRTUAL_HOST}
        depends_on:
            - php
        volumes:
            - ../..:/var/www:ro
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx/error:/usr/share/nginx/html:ro
        logging:
            driver: "json-file"
            options: { max-size: "2m", max-file: "3" }
        networks:
            default:
                aliases:
                    - "nginx.${COMPOSE_PROJECT_NAME}"
                    - ${VIRTUAL_HOST}

    php:
        container_name: "${COMPOSE_PROJECT_NAME}_php"
        depends_on:
            - mysql
            - elasticsearch
            - redis
            #- mysql_migration
        volumes:
            - vendor:/var/www/vendor
            - ../..:/var/www:rw
            - ./php/php-fpm.conf:/etc/php7/php-fpm.conf:ro
        environment:
            PHP_DOCKER_ACCESS: "1"
        logging:
            driver: "json-file"
            options: { max-size: "2m", max-file: "3" }
        networks:
            default:
                aliases:
                    - "php.${COMPOSE_PROJECT_NAME}"

    cron:
        container_name: "${COMPOSE_PROJECT_NAME}_cron"
        image: ekyna/php7-fpm:7.1.12
        entrypoint: ''
        command: "su -c 'crond -f -l info'"
        depends_on:
            - mysql
            - elasticsearch
            - redis
        volumes:
            - vendor:/var/www/vendor:rw
            - ../..:/var/www:rw
            - ./php/prod/php.ini:/etc/php7/conf.d/90-custom.ini:ro
            - ./cron/crontab:/etc/crontabs/www-data:ro
        logging:
            driver: "json-file"
            options: { max-size: "2m", max-file: "3" }
        networks:
            default:
                aliases:
                    - "cron.${COMPOSE_PROJECT_NAME}"

    mysql:
        container_name: "${COMPOSE_PROJECT_NAME}_mysql"
        image: mysql:5.6
        environment:
            MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
            MYSQL_USER: "${MYSQL_USER}"
            MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
            MYSQL_DATABASE: "${MYSQL_DATABASE}"
        working_dir: /root
        volumes:
            - ./mysql/mysql_backup.sh:/root/backup.sh:ro
            - ./mysql/mysql_restore.sh:/root/restore.sh:ro
            - ../../var/backup:/backup:rw
            - database:/var/lib/mysql:rw
        logging:
            driver: "json-file"
            options: { max-size: "2m", max-file: "3" }
        networks:
            default:
                aliases:
                    - "mysql.${COMPOSE_PROJECT_NAME}"

#    mysql_migration:
#        container_name: "${COMPOSE_PROJECT_NAME}_mysql_migration"
#        image: mysql:5.5
#        environment:
#            MYSQL_ROOT_PASSWORD: "root"
#            MYSQL_USER: "migration"
#            MYSQL_PASSWORD: "migration"
#            MYSQL_DATABASE: "migration"
#        volumes:
#            - database_migration:/var/lib/mysql:rw
#            - ./migration/database.sql:/docker-entrypoint-initdb.d/db.sql:ro
#        logging:
#            driver: "json-file"
#            options: { max-size: "2m", max-file: "3" }
#        networks:
#            default:
#                aliases:
#                    - "mysql_migration.${COMPOSE_PROJECT_NAME}"

    elasticsearch:
        container_name: "${COMPOSE_PROJECT_NAME}_elasticsearch"
        image: elasticsearch:1.7.3
        volumes:
            - ./elastic/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
            - elasticsearch:/usr/share/elasticsearch/data:rw
        logging:
            driver: "json-file"
            options: { max-size: "2m", max-file: "3" }
        networks:
            default:
                aliases:
                    - "elasticsearch.${COMPOSE_PROJECT_NAME}"

    redis:
        container_name: "${COMPOSE_PROJECT_NAME}_redis"
        image: redis:3.2.5-alpine
        logging:
            driver: "json-file"
            options: { max-size: "2m", max-file: "3" }
        networks:
            default:
                aliases:
                    - "redis.${COMPOSE_PROJECT_NAME}"
